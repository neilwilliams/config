c
config
c
env_key
n
c
env_key
n
source_keys
lookup_key
c
source_keys
c
source_keys
new_keys
c
separator
new_keys
c
new_keys
source_keys
lookup_config.keys
c
source_keys
lookup_config.keys
source_keys
lookup_config.keys
c
lookup_config.keys
lookup_config
source_keys
c
separator
seperator
new_keys
c
new_keys
c
found_keys
source_keys
lookup_config
c
n
k
lookup_config
lookup_config[k]
c
lookup_config[k]
c
lookup_config[k]
c
k
lookup_config
c
found_keys
lookup_config
c
lookup_config
c
lookup_config
c
lookup_config
c
lookup_config
c
lookup_config
lookup_config.keys
c
new_keys
c
new_keys
n
lookup_key
n
env_var_split_keys
lookup_config
n
env_var_split_keys
found_keys
c
n
value
leaf
n
new_keys
n
c
n
c
n
c
found_keys
env_var_split_keys
lookup_config
n
lookup_key
c
lookup_config
n
c
found_keys
c
n
lookup_config
n
found_keys
n
c
found_keys
keys['query_service']
keys[:query_service]
found_keys
keys
env_var_split_keys.dup
lookup_key
n
s
found_keys
search_keys
n
env_key
n
c
env_key = env_key.gsub(lookup_key.to_s + "_", "").gsub(lookup_key.to_s, "")
env_key = env_var_split_keys.join(split_char)
lookup_key.to_s
env_key = env_var_split_keys.join(split_char)
env_key = env_key.gsub(lookup_key.to_s, split_char)env_key = env_var_split_keys.join(split_char)
env_key = env_key.gsub(lookup_key.to_s, split_char)
n
env_key = env_key.gsub(lookup_key.to_s, split_char)
lookup_key
env_var_split_keys.join(split_char)
c
env_var_split_keys.dup
lookup_key
c
n
c
env_key
n
lookup_key
n
c
keys
keys.select{|k| k.to_sym == search_keys.join(split_char) }
keys.find{|k| k.to_sym == search_keys.join(split_char) }
keys
search_keys.join(split_char)
lookup_key
n
c
search_keys.join(split_char)
lookup_key
n
search_keys.join(split_char)
search_keys
keys
c
search_keys
keys
n
s
n
s
n
s
variable
c
new_keys.shift(prefix_array.size) != prefix_array
n
variable
c
n
variable
n
prefix_array
new_keys.shift(prefix_array.size)
n
variable
c
prefix.size
prefix.split(separator)
new_keys.shift(prefix.size)
variable
c
variable
c
ENV
variable
prefix
new_keys
new_keys.shift(prefix.size)
c
prefix
new_keys
c
env_var_split_keys
exit
c
env_var_split_keys
env_var_split_keys.dup
search_keys
c
search_keys
c
search_keys
c
search_keys
c
search_keys
c
search_keys
c
search_keys
c
search_keys
c
search_keys
c
search_keys
c
search_keys
c
n
found_keys
n
lookup_key
n
lookup_key
n
lookup_key
n
c
n
platform
c
platform
c
platform
c
platform
c
RUBY_ENGINE
platform.to_s
n
c
n
c
RUBY_ENGINE
RUBY_PLATFORM
ENV['RUBY_PLATFORM']
n
platform
c
platform
